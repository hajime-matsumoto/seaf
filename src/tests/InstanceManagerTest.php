<?php
namespace Seaf\DI;

class SomeClass {
    public $params;

}

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-03-08 at 06:30:00.
 */
class InstanceManagerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var InstanceManager
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new InstanceManager;
        $this->object->register('classA', 'Seaf\DI\SomeClass');
        $this->object->register('classB', 'Seaf\DI\SomeClass',array(array('key'=>'value')));
        $this->object->register('classC', 'Seaf\DI\SomeClass', null, function($instance){
            $instance->params['key'] = 'value';
        });
        $this->object->register('classD', 'Seaf\DI\SomeClass', null, function($instance){
            return new Factory();
        });
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Seaf\DI\InstanceManager::has
     * @todo   Implement testHas().
     */
    public function testHas()
    {
        $this->assertTrue($this->object->has('classA'));
        $this->assertTrue($this->object->has('classB'));
        $this->assertTrue($this->object->has('classC'));
        $this->assertTrue($this->object->has('classD'));
        $this->assertFalse($this->object->has('classE'));
    }

    /**
     * @covers Seaf\DI\InstanceManager::get
     * @todo   Implement testGet().
     */
    public function testGet()
    {
        $classA = $this->object->get('classA');
        $this->object->register('classD',$classA);
        $this->assertEquals($classA, $this->object->get('classD'));
        $this->assertNotEquals(spl_object_hash($classA), spl_object_hash($this->object->get('classA', true)));
    }
}

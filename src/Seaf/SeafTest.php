<?php
use Seaf\Log\Level as LogLevel;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-03-08 at 14:43:17.
 */
class SeafTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Seaf
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        Seaf::singleton();
        Seaf::init();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    public function testLogHandler()
    {
        $this->assertInstanceOf('Seaf\Log\Handler',Seaf::logHandler());
        $this->assertInstanceOf(
            'Seaf\Log\Handler',
            $lh = Seaf::logHandler('test2', array(
                'type' => 'debugger'
            ))->register()
        );
        $this->assertEquals($lh, Seaf::logHandler('test2'));

        $lh->unregister();
    }

    /**
     * @covers Seaf::singleton
     */
    public function testLogger()
    {
        // デフォルトのログハンドラをファイル出力へ変更
        Seaf::logHandler('default', array(
            'type' => 'file',
            'level'=> LogLevel::ALL ^ LogLevel::DEBUG ^ LogLevel::INFO,
            'file' => '/tmp/test.log',
            'fileType' => 'a'
        ))->register();

        // 緊急時のエラー
        Seaf::logHandler('emerg', array(
            'type' => 'file',
            'level'=> LogLevel::WARNING|LogLevel::ALERT|LogLevel::EMERGENCY|LogLevel::ERROR,
            'file' => '/tmp/error.log',
            'fileType' => 'a'
        ))->register();

        Seaf::logHandler('develop', array(
            'type' => 'console',
            'level'=> LogLevel::ALL ^ LogLevel::DEBUG,
            'file' => '/tmp/test.log',
            'fileType' => 'a'
        ))->register();
        Seaf\Log\Log::register();
    }

    public function testRegistry()
    {
        Seaf::set('a','b');
        $this->assertEquals('b',Seaf::get('a'));
    }

    public function testEvent()
    {
        $return = false;
        Seaf::on('test',function() use (&$return){
            $return = true;
        });

        Seaf::trigger('test');
        var_dump($return);
    }
}
